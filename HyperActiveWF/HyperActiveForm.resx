<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAAAAAAAEAIAC3GQAAFgAAAIlQTkcNChoKAAAADUlIRFIAAAEAAAABAAgGAAAAXHKoZgAAAAFv
        ck5UAc+id5oAABlxSURBVHja7Z0JlFTVmce/olkVZFFZBDUKLuNRExQnmqhxy4CSc6JmXMeFE8aNREeZ
        SRwXIjERxyWR0YAmEUE9LlEi4iEqAiPiEVFn1KCiBMWoiAiIyNrQ0He+P/eW/brppuu9d6vqLf//8Xeq
        ELrq9X33+7+7fyIZU1uRNvrSS/mucpVyj/KM8p7yqbJOqVcMSRyrlReUf1N2E4oKoZ7Kacqdyjzlc2UT
        gyqV4L49qezHak01UsHhhKf9N5WblP9TNjB4MsUMpX/xZndi9acCzfwjlN8qHzFQMs1UpS9rPVXUXsov
        lU8YHLnhkQLHBPLb5HeqcX38VxgQuQODtuOVLoyIfJrArvoySvmSwZBbNis3KzsxIvIlDAJNUbYwCHLP
        RuVqpR3DIh86SJnJik8CrFGusGPBVJY1UHmZFZ5I8wuG/hW9Q4wRtWGspF+dpNE87/5iV4SxspOWwEKv
        s8UZQIEhlBlhmm86KzgpgSUa+EOFBpCZ0X40Au4pw8ARFgvNUR5V7lJ+pdygjCZl5QZX1m+W0QQWKkcz
        erKhy5T14mfK6B1lnGsmDlC6Kx3bsMtYBV+XiWVuCbyuHM6iTrewtPdjib9g5A3lUq11/WpaCPb2HEKu
        pFDc91egO4AB44NY3ClSIDo7K3+K2x90zc69g48eEW4iyYkBAEwZc/NQWhR4Cp8fs+kP9z+m+GE1HBTK
        qwGAvyj9aAIp6RwqvSX6fP9WsfvG92dp0gACPKqty91Z9OnQMLGDdlFu9AMF3ugsGsAqsSc3RTUAPBju
        0bqxC4s/gQo0y7pJ9KW++Lk9WZqZNID/Ua5XvhJuHsq0Botd2x325r4pdqlw0xWEVDYM4FmxO0B/HnNs
        aIMzkg68DQnr+9fYsbq7JNpmkNNZipk2AKwE7eICF4e/1MYwAXQlrrBVjkqSCWCk9p0IN/QxZWeWYOYN
        YBdXTzBF/N8Sbzv4auUi4eahRGlohIGe5cqxLLr8GIDYgEV3YJLEmxn4QjnHfR6niROgMRFu4gRtx7Xj
        zcuXAbiWAKaLpwg3D2VCuLkzIgzosO+fMwNoMsC7t8TfKcrNQwkQjnleHPLGLXDjBhz1z2ELICAfZ0Vg
        89Ag3prqCTu3VoS8aX/UvltbNt1ybwDQt5RXJf7moYN5e6qjUyXcAGCdcjGLjQYQ0JHKWzFN4HmxW8WF
        LcvK6nIJl6ATc/8n8ybRAKDiNF7BLiRbLNw8lA4FCvc6CT+FcyRLMLUGMMmnAbiFZMX3GBheJtw8lCoD
        GB3yBn2qN3oflmAqhTP87/PdBWgjjRb0DJN4SWOweej3YvemUBUwgJtC3qAPlT1YgjSApi2BQoMfjJB4
        m4ew0hDJZrnKtAIGEHYR0N+UPizB1BrAhHIYQBPhfJm4m4ew5wB7D7h5iAZApcwAoI4Sf/PQWmWk8NhI
        GgCVOgMQ14S/Q+JtHvrKdSnaBLoZFA2AiiA8Se+tlAG43X49JP7mIZxKdN5RjccaKBoAlWQDCBgBNg9N
        jmkCn7lpRhoADYCKYQB/qJQBNFnI4yPN3AfKCbyNNAAqmrBm5x6pcAsgIGweej6mCcwXLkSjAVCRDeD3
        VTQACJt+5sU0gXnCzUM0ACqVBiDuCT5f4m8eYg4KGgCVQgMQ15f/IKYJTHdjC82NOVA0ACqJBlBoeMWo
        /mcxTWCym2WgaABUWgwAHGX/eJ7Yef44JjAJ6w04PUgDoFo3gLCzAC8q3X1fSBk2D2HFITcP0QCo5hTY
        rnubhJ97L/fuT6xPwJr/tRJ/81BH3m0aANVE3RreXivhV+AdUIFL9JF5CLsPfy7cPEQDoFq83xcqmyTc
        jryhxf5DmYUm/G+Fm4doAFTZdKLY9Fxh7jmSem7bSlihxgoGKrdKzM1Dx8l2pxVRNIDcCyfvLgl5zx+W
        Ch7MoU/tnvryuHjaPEQDoAFQDcKI/pyQ9xyn/favYJ2E9hR7SnAcE8B1f5+3nAZANSjKWoCNytlVaq1w
        8xANgPKskREC6aGCm2Kr8JJbbPp5OaYJIHPRt3jbaQCU1bfFpncPlQ6+UL0nKdLXvRnTBJDDkJuHaACU
        2KW9MyME0Xg1gfZVmlrD5qFFEn/z0N4tjDnQAGgAudIvJdr02imVvtDA5iGsR1gS0wSmcPMQDYASOVps
        mrewAYQZhL0qbQCBqbxzIl43Nw/RAKiAOitPRQyg8ZVuQbdpaAngBdmpuXmIBkDFFJ6mUdbeb1BGSWDj
        TYX701iUiJmMdcLNQzQAKrJ2U16S6Btvbiy4swLaSsXX3WNl4vXOjOJsHrpaKrbKmQZAJU//ItFz+GFT
        0SRl3ypd+07KzcrmGCawRrlc8rZ5iAZAOeEJPkXiDaq9oQyXCqf0doOD+M64m4eQznyYkRxlHqIBUAF9
        T/k8pgmgT421+8cV7ABjxaQmsLu+PBrz+pcVNw/VSA7WCNAAqOJTtK0dZL9GqYsZRABTdE+L3ZN/oJRx
        F2GTIO0n8TcPoW4PZBeABpArA3Dq7qEr0HSq7SPlIeUS5diCXYXXVcp3tsg3JH76sYf1Oncq0ABoADnU
        P0j8rD0tmQH62R8qs5S7ldHKlcoFyqnKScp3xB4WDLBQ6ZiQfFe5FM35GNe6Ur4+sJgGQAPInxCE75XB
        BHY0k4D5/NWu+1BkVQzizArgZ4dJ1scBaADUDnSy8nEFTSBpjKYB0AByqTbuJqsGS/z8fWllDA2ABpBb
        AwhsvMH+/5dpADQAGkB+hWO5/iDRVwvSAGgAVFpbA1DBVpdL3L2nAdAAaAB5UDAA3Lw4zucbJ/GTedIA
        aABUmhQ4lae92FOBHhM7Z04DoAFQeWkNBFbIYSfe8cofxR7TtYUGQAOg8jdOgL30WEGILbXPiF2FV0cD
        oAFQ+WoR4H0Xsefv48guzBy85boJG2kANAAqu62A5vJx43/1EnumP44eu0G5V5kmdoERug3Ygoxlv6vF
        ZiHeUAZgPvU0ABoAVWUVrCngrICebmfgN8VuvMFGIBz5/c/KmR7B510i4TcH0QBoAJQv1TTfQqiUekr4
        9Qs0ABoAlRH1oQHQACgaAA2ABkDRAGgANACKBkADoAFQNAAaAA2AogHQAGgAFA2ABkADoGgANAAaAEUD
        oAHQACgaAA2ABkDRAGgANACKBkADoAFQNAAaAEXRAJIhJGbHqQdIalZXIsgA2S+6AfQeFOK7CKkGg2z9
        7h3FAPq5GCn1uza7GKytRMBvFXsCY30AXDXyIq8TqSmFrS5Fc3v9ZfWNCcH7aqn99PsKpX4XIdUAdRR1
        FXU2TB1v71oAW0N8VzEneTAmt7hY9Rr4dYGA1z930/dHKsP1z7/Q17HK3aWiPzNulsj/jtePu7sE8O8m
        iqz9QuQB/dnxYb6LkEqDOoq6ijobpo4jJhAbIb9vrIvB4YhJxGbREOriGkFtQ8AXXwfoB4/S97OVFUqd
        YgghVafOxeRsjdFfaKzuh5hdrSyP0kUoOkjgiX+lvp/PgiYkFczXuL1ysciutYEWfEmqC/T14ST6+iif
        9oSkr1Wg8fsnF8PbYrqu1Gk65xiH6oe8xIIkJNW86GJ5W4t+hyr+o/UiffX1WRYeIelHDeBZbQHssXVH
        XQE89b9UPhHpuFlkHAuOkEyZwJ1qAB3qW+oKrG+YUzxRX1ex0AjJFKtcbG+L9Wbn+5Vd9B9MZWERkkmm
        Isa3Wx8QWOF3LJ/+hGS6FXBscVagUf/fNf9HsZAIyfRYAGK88TiAm/PvrH8xjYVESKaZhlivb2oASi/9
        y3dZQIRkmncR680ZQH/9y6UsIEIyzVLEen0zXYCB+pfLWUCEZJrliPXmDOAwGgAhuTCAw2gAhNAAaACE
        0ABoAITQAGgAhNAAWEiE0AAIITQAQggNgBBCAyCE0AAIITQAQggNgBBCAyCE0AAIITSAtNOuXXUo1+/T
        tm31fqc2bSp//2pq/F0/yo4GkCN69zbmjjuMmTjRmPvuqwz4rrFjjdljD/+/T8eOxowcacykSZX7fYpM
        mGDMuHHG3HyzMddea8xllxlzzjnGHHaYMT16lMcc2rc3ZsQIY+6/P/714zOGD8+SCdAAWuUHPzBm40ZT
        cW3aZMzpp/v/fTp3Nubpp00itHWrLdvPPzfmpZesOQwbZszee/v7fXfayZgnn/R3zTCBcrbOaAAJ48Yb
        qxcgY8aUxwCmTTOJ1ebNxsyfb8w11xgzYIAfA/jzn/1dH1oCNICcUO2n5XPPGdOlS74MINg6WLDAmKuu
        MmbnnWkANIAqcMABxnz0UfWC4OOP7TXk0QCKqq21XYM+fWgANIAKc8YZ1en/F4XvPvPMfBtAUVOnGrPf
        fjQAGkAFwWh1tXXrrTSAop54wpju3WkANIAKsMsuxsyYUf1K/8ILxnTrRgOA6uqMuf56O69PA6ABlJUD
        DzTm00+rX+mXLTPmkENoAEUtX26nZmkANICycv75di4+CdNiP/4xDSComTNLbxXRAGgAoSkU7Eq8pAij
        4L5WyWXBANasMWboUBoADaBM7LqrXZmWFOFasFSWBtAgLGXGMl8aAA3AO1ibjuWpSRGuBddEA2i8RuLg
        g2kANIAygD43+t5J0ZYtxlx6KQ2gaZlgMxENgAbgfeso+txJ0733+tmFlhUDKHVshAZAAwjFbrsZ89pr
        yavsr79uTM+eyTOAJUuMmT27AaxbmDvXmL/+1ZjFi41ZscI+rcuhWbOM6dqVBkAD8MiRRxrzxRfJM4BV
        q4w55pjkGQBaJhigxLRcEfwZZtW3rzGHH267L1hUVV/vt0z+/ndj+venAdAAPPKTn9idaEkTrunyy5Nn
        AGiGY9q0te/dc0/bQvA9HXjKKTQAGoDH02Nw4IMvLV1q8SVcWylTX5U2gFLXKOAkIp/CZimcKEQDoAF4
        oVcvY958098KPjR9L77Y34rCt96yR5Sl1QCws3HDBr+rJHFEFw2ABuAF9LHR1/Y1d3/ooRZfawpWrzbm
        +OPTawCnnmrMunV+WwE4MIQGQAPwwpVX+huoevVVu6IQ4L0vXX01DSAo7A6kAdAAYtOhgzEPP+x/3h7g
        vS89/rgxnTrRAIr69a9pADQAD2DKauFCfyP2P/1pw2fjva+ZhUWL4p2amzUDGD2aBkAD8MDgwXZayYe+
        /LLxnD3e4//5mvoaMoQGUGqXiAZAAygJ9CV96e23G4/WI8GHr9ZFKf3evBgAWlWt7QegAdAAWgV9ap+V
        5JFHbAaeYCWcPNnf5yPRRdSjsqtpAKedZsz69f6+G9OrF1xAA6ABxAR9avSty9ksRV+1kktgk2gAF17o
        d5clzORHP6IB0AA8pP/y1TRtqY+OiuprEQwqftS0YdU0AORY9KlS1kXQAGgAFU3/9eGHxuyzT/NJRnCI
        hS9FTRvm2wB+97vWvxMbhJBj4bPP/BoAWkLNlTUNgAZQtfRfzzzTfDovbFvF9lVfipo2zLcB4PdFa+SH
        P7SDfACtHST5vOIKY267zZg5c4z56ivjXdwOTANIXPovJBNp6aBRn03gqGnDfBsAzupH9ykIuigYoPO9
        /TdK94MGQAOoWPov9PHxeS19F56KvgbBoqYNy8qJQJgCHDGCR4LRABKU/gtbf5FQZEeHjSKxhS9FSRuW
        FQNAOeLwFhoADSAx6b9wHBY+c0fHjeNoL5/fFzZtWFYM4Kmn7O9CA6ABJCb9FyraoEHGDBxon/ZB8P+O
        OsoO3vlSlLRhWTAAdKPQnWJiEBpAotJ/YfALTdOWwAGZPtONR0kblgUDmD/fHjFGA6ABZCb9VyUW4mTB
        ADD4N2pUaecQ0gBoAKlJ/xVVYdOGpd0AkBi0Tx9mB6YBZCz9V1SFTRuWZgPAeo2wR6PTAGgAqUj/FVVh
        04al1QCwxgIrC8PeZxoADSA16b+iKkzasDQaADb9/Oxn0Y5CowHQAFKT/iuqwqQNS5sBfPCBna2JmheR
        BkADSE36r6gKkzYsLQaAsY3x4+36iTj3mgZAA0hN+q84U2Olpg1LsgFgjQQOZpkwwZjjjvMTaDQAGkBZ
        038lRaWmDfNtABhIxSEoYUCffuVKuwpzwQK7pBlrMrCRCvv746Y/owHQACqS/itJKjVtmG8DwGcNHWrM
        ySeXzgknGHPEEcbsu6+9H927l76whwZAA0hM+q+kjZSXkjasGicCVRMaAA2gbOm/kqZS0oZV80xAGgAN
        IFPpv5KmUtKG0QBoALk1AJ/pvyC0JLBCremRWKWCn/XZGiklbRgNgAaQWwPwmf4Lwtp0nHUfPBCzVPAz
        +FmcbOtLpaQNowHQAHJrAD7Tf0HI9oNuRZwpycce83tNraUNowHQAHJpAL7Tf0GtZaYtBext96nW0obR
        AGgAuTQA3+m/0H9vLS1VNfLltZY2jAZAA8ilAfhM/wVFPZe/KQhWn+MAraUNowHQAHJpAD7Tf0E4mWZH
        JwCHOZl4+nS/17ajtGE0ABpA7gzAd/ov6Pbb/V0fzvf3qR2lDaMB0AByZwC+03+FOZa6FM4915ja2sp0
        T2gANIDcGcBZZ/k9/hvHe4c5h681sOcdn+nToM4+uzKtobvvTr4BTJni7/edNIkGkMrz/+bNM2bu3Pjg
        c1AJsIPN1/Xhs/CZvq7xlVeMueiilqdDb7nF/hsf3zNyZPl28vmgY0c7JuLr973uuuinE9EAqgTmxXEM
        OI7P9gH61z4rPT4Ln+nr+vC7trQWAN+FVoCv78ITNun5H3z+vjtaY0EDIITQAAghNABCCA2AEEIDIITQ
        AAghNABCCA2AEEIDIITQAAghNABCCA2AEEIDIITQAAghNABCSPkNYCANgJBcGMDA7QxA6a9/uZQFREim
        WYpYb2QAxtJHWcQCIiTTLHKxvl0XoKv+z1ksIEKyi8b6C0r3Ri2ALa4VoP/zv1hIhGTaAG55yMX819rq
        qBMZov9oLQuKkEyyRg1gsGvxN9Ya5WOR3fUvX2JBEZJJXtTA71EvzQhdgFrbDThH329gYRGSKTYgtt2M
        3/aqb+gKdNF/PJkFRkimmIzY3tqSAUDrGgYD99fXuSw0QjLBXBfT22K8RdW50UF0BdaLfK+e6wIISfuo
        /yLEcq2L7TppRWgeLHUtAW0uHM2WACHpffK7GN4W0/VSopYob7uWgDJgs8g4/ZCVLFBCUsFKxCxit9bF
        8hIJKbjFLNcSWCjSXv98gr5/UPlEqWUhE5Ioal1sPohYRcwaF8P1ElGdnAGscK/ah+igH3aAvp632a4a
        nKT8RZkZghnviSyeoR85s0TmiGzcIPJiyO8hpCqgrqLOllq/EQuICcRGyO9C7E1CLCImXWx2CMZsJ/Eg
        NCNec9OEWxo2D+E9WgZdlK6lYCyd+4r8pqt+RKl0F/lguP5yJsR3EVINUEdRV1Fnw9RxxARiw4T7vi5b
        3JPexeO2GH3NxWxZVHSUGe7L6kPwmXKS/fGbAj5SCn9Tel8U8vsIqTQX2frd29XZMHX8ppNcjIT5vq0u
        FsXX076cClzgmAgG0EcoKh3qE8EAxqQiiD0ZQNgWwIfKHqxXVIoMYFHYFkCeDGB0yMLBNOYA1isqDSqI
        fMPNvIWp46PzZADXhSycL5TvsGpRKdERysqQdfy6zBtAQJe7MYxSCwe7lU9mvaJSoiGuzpZav+tdTORG
        p0rD3qNSwBLmS1ivqJToEldnS63f61xM5EaHS8NahVK5T2nHukUlXO1cXQ1Tt1e4mMiNMKL/fshCWlAQ
        6ZenfhKVHhXrpKujC0LW7fclZ7NcnZVpIQtpg3IaqxqVcJ3m6mqYuj3NxUSudGPIQgIPqMN2KLCSUQlT
        wdIBdTRCvb4xj2V2irJWwk8HnsDqRiVUJ7o6GqZOr3WxkDvHRF/pnQhu+Ziyc9F1KaraT/5At/aJCPX5
        neLYVq4KrWbbf3JXhALDlMn5+Jw2rH9UlRWog+dLuKntImPzXJUHS7gFE0UWKoPwAW2FswJU1XWUhF/7
        X1zg9k+5K61AwHZTZkYoODBb2Rcf0pEVkKqesEdlTsQ6PNPFQK51rrIxYgE+LnnrP1FJ0l7KUxHr7kZX
        93OvHsoLEQsRPKMc3MygDEV5VZO6hTr3XIx6i6d/d5aq1VkRxwKKvKEMactxQarMcnVsiKtzUesr6voZ
        LM0GZ0U3fmKMAgXLxB6qsD9LlCqT9nd1bFnMunof6jxbq411mITfH9Dctsp3lZEF2z9rdvNQe+vkFFV8
        qm+rEy0IdWgf5d9d3aqPWUffUw5hqTt1kq+XUULDJdpcalO2uJuFVsWFYkdq0d/q2IbdBKoFubrR0dWV
        Aa7uTHRBu8VDvfxKOQ/fVSOcvm5OWEt9hweXDbJJ+UjsVM2jYhcf/Uq5QewxTITc4OrEXa6OzHF1ZpPH
        eog6fUuxscHmf8vCkcpTPRY8IUngcQ363RnepQnNr+dZaUhGmC52TIpP/hA6iCZAMgDyduzHcI4+7TKd
        lYikFHRl+zOM4wlNpwfFpjtjpSJpoNbNHvRl+PpRF+U/JPxBooRUGqT3wzqUzgxbj3JLMLF1cranOVlC
        fIJjwLG+//vtRArFwT7O9XtQofH7XvpyjZunZcUjSWChe+r3LC5q42h/+T3hUOV2GgGpcuDfKoHdqFRl
        hW4B1lVfq7wm4Q8ZJSTKct4Xlf9UDuDDPjnCKiscMTZWmSd2x9ZGVljiYUR/qRt7+o2rYz0YbglVjW0V
        wAy+rYxQ7nTzsdgc9KnYzUb1rNhEtl+rv87VkXddnbnT1aF/VHZtn8Gn/f8DW7CanUI+E6IAAAAASUVO
        RK5CYII=
</value>
  </data>
</root>